buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
  }
}

allprojects {
  apply plugin: io.spring.gradle.dependencymanagement.DependencyManagementPlugin

  dependencyManagement {
    imports {
      mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.269'
    }
    dependencies {
      dependency group: 'com.gu', name: "scanamo_$scalaVersion", version: '0.9.5'
      dependency group: 'com.gu', name: "scanamo-scrooge_$scalaVersion", version: '0.1.6-adazza'

      dependency group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'

      dependency group: 'com.twitter', name: "bijection-core_$scalaVersion", version: '0.9.6'

      ext.twitterLibVersion='18.1.0'
      dependencySet(group: 'com.twitter', version: twitterLibVersion) {
        entry "scrooge-core_$scalaVersion"
        entry "scrooge-generator_$scalaVersion"
      }

      //This version is linked to the version used by finagle.
      //If you change the finagle version you likely need to change this also.
      dependencySet(group: 'com.twitter', version: twitterLibVersion) {
        entry "util-core_$scalaVersion"
      }

      //Finagle
      ext.finagleVersion = twitterLibVersion
      dependencySet(group: 'com.twitter', version: finagleVersion) {
        entry "finagle-core_$scalaVersion"
        entry "finagle-thrift_$scalaVersion"
      }

      //Logging
      dependency group: "ch.qos.logback", name: "logback-classic", version: "1.0.13"

      //Finatra
      ext.finatraVersion = twitterLibVersion
      dependencySet(group: 'com.twitter', version: finatraVersion) {
        entry "finatra-http_$scalaVersion"
        entry "finatra-thrift_$scalaVersion"
        entry "inject-app_$scalaVersion"
        entry "inject-core_$scalaVersion"
        entry "inject-slf4j_$scalaVersion"
        entry "inject-thrift-client_$scalaVersion"
        entry "inject-inject-utils_$scalaVersion"
      }

      dependencySet(group: 'com.adazza.common', version: '1.9.0') {
        entry "common-testing_$scalaVersion"
        entry "common-utils_$scalaVersion"
        entry "common-finagle_$scalaVersion"
        entry "common-finatra_$scalaVersion"
        entry "common-api_$scalaVersion"
      }

      //Spark
      dependencySet(group: 'org.apache.spark', version: '2.1.1') {
        entry 'spark-core_2.11'
        entry 'spark-sql_2.11'
        entry 'spark-mllib_2.11'
      }

      //Nifi
      ext.nifiVersion = "1.3.0"
      dependencySet(group: 'org.apache.nifi', version: nifiVersion) {
        entry 'nifi-api'
        entry 'nifi-utils'
        entry 'nifi-mock'
      }

      ext.avroVersion = '1.8.2'
      dependency group: 'org.apache.avro', name: 'avro', version: "$avroVersion"

      dependency group: 'com.github.seratch', name: "awscala_$scalaVersion", version: '0.5.9'

      dependency group: 'org.scalaz', name: "scalaz-core_$scalaVersion", version: '7.2.9'

      dependency group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.11.86'

      dependency group: 'org.scalatest', name: "scalatest_$scalaVersion", version: '3.0.1'
      dependency group: 'junit', name: 'junit', version: '4.12'

      dependencySet(group: 'org.mockito', version: '1.9.5') {
        entry 'mockito-core'
        entry 'mockito-all'
      }

      dependency group: "com.google.inject.extensions", name: "guice-testlib", version: "4.1.0"
      dependency group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.11.86'
      dependency group: 'com.twitter', name: "storehaus-testing_$scalaVersion", version: '0.16.0.adazza'
    }
  }
}
